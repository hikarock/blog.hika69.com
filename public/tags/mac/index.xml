<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mac on hikarock blog</title>
    <link>https://blog.hika69.com/tags/mac/</link>
    <description>Recent content in Mac on hikarock blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>All rights reserved - 2015</copyright>
    <lastBuildDate>Thu, 07 Jan 2016 21:46:22 +0900</lastBuildDate>
    <atom:link href="https://blog.hika69.com/tags/mac/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>スネークケースのファイル名・クラス名をパスカルケースにリネームする</title>
      <link>https://blog.hika69.com/blog/2016/01/07/rename-snake-case-to-pascal-case/</link>
      <pubDate>Thu, 07 Jan 2016 21:46:22 +0900</pubDate>
      
      <guid>https://blog.hika69.com/blog/2016/01/07/rename-snake-case-to-pascal-case/</guid>
      <description>

&lt;p&gt;あるプロジェクトで &lt;a href=&#34;http://www.php-fig.org/psr/psr-0/&#34;&gt;PSR-0&lt;/a&gt; に対応する作業に関連して、スネークケースのファイル名とクラス名をパスカルケースに変換する必要があった。&lt;/p&gt;

&lt;h3 id=&#34;ファイル名の変換:4739118768bed0d63c3796c5bfa8d06b&#34;&gt;ファイル名の変換&lt;/h3&gt;

&lt;p&gt;Mac に rename コマンドをインストールする。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ brew install rename
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;変換前&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ls -l
-rw-r--r-- 1 hikarock staff 0  1  7 21:47 foo_bar_buzz.php
-rw-r--r-- 1 hikarock staff 0  1  7 21:47 hoge_fuga.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;rename コマンドを叩く。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rename -f &#39;s/(^|_)(.)/\U$2\E/g&#39; *.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;変換後&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ls -l
total 0
-rw-r--r-- 1 hikarock staff 0  1  7 21:47 FooBarBuzz.php
-rw-r--r-- 1 hikarock staff 0  1  7 21:47 HogeFuga.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;よさそう。&lt;/p&gt;

&lt;h3 id=&#34;クラス名の変換:4739118768bed0d63c3796c5bfa8d06b&#34;&gt;クラス名の変換&lt;/h3&gt;

&lt;p&gt;Mac に標準で入っている sed は使わずに GNU sed をインストールする。&lt;/p&gt;

&lt;p&gt;参考: &lt;a href=&#34;http://shunirr.hatenablog.jp/entry/2012/12/19/160544&#34;&gt;Homebrew を使って OSX に GNU sed を入れる - おともだちティータイム&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ brew install gnu-sed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;変換前。対象はクラス名だけにしたいので、他のスネークケースの変数名や関数名を含んだ状態で、余計な箇所が変更されていないか確認しながら検証する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php

class foo_bar_buzz_controller extends bar_buzz_controller {
  private $hoge_fuga;
  public function set_hoge_fuga() {
    //
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;gsed コマンドで変換する。&lt;code&gt;/^class.*\{$/&lt;/code&gt; で対象行でクラス宣言の行だけに絞り込んでいる ( &lt;code&gt;{&lt;/code&gt; は改行した次の行に書く場合の方が多いかもしれないけど、このプロジェクトでは &lt;code&gt;class&lt;/code&gt; と同一行に書いている)。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gsed -i -r &#39;/^class.*\{$/ s/_(.)/\U\1\E/g&#39; *.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;変換後&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php

class fooBarBuzzController extends barBuzzController {
  private $hoge_fuga;
  public function set_hoge_fuga() {
    //
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;クラス名の先頭が小文字のままだった。&lt;/p&gt;

&lt;p&gt;今回はたまたま対象クラス名の末尾に必ず &lt;code&gt;Controller&lt;/code&gt; が含まれていたので、以下のようにしてお茶を濁した。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ perl -pi -e &#39;s/ (\w+?)Controller/ \u\1Controller/g&#39; *.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;perl コマンドを使ったのは sed で最短一致ができなかったため。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php

class FooBarBuzzController extends BarBuzzController {
  private $hoge_fuga;
  public function set_hoge_fuga() {
    //
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;完了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Xcode のキー配置をカスタマイズする</title>
      <link>https://blog.hika69.com/blog/2014/12/28/xcode-remap-key/</link>
      <pubDate>Sun, 28 Dec 2014 13:01:51 +0000</pubDate>
      
      <guid>https://blog.hika69.com/blog/2014/12/28/xcode-remap-key/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/XVimProject/XVim&#34;&gt;XVim&lt;/a&gt; を使いはじめたら、Xcodeのキー配置が、カスタマイズ済みのターミナル (およびVim) と微妙に違うのが気になってきた (ターミナルはControlキーをよく使うので、CommandキーとControlキーを入れ替えている) 。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://pqrs.org/osx/karabiner/index.html.ja&#34;&gt;Karabiner&lt;/a&gt; を使ってXcodeのCommandキーとControlキーを入れ替えた。&lt;/p&gt;

&lt;p&gt;private.xmlに以下を追記した。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;
&amp;lt;root&amp;gt;
  &amp;lt;list&amp;gt;
    &amp;lt;item&amp;gt;
      &amp;lt;name&amp;gt;Enable at only Xcode&amp;lt;/name&amp;gt;
      &amp;lt;appdef&amp;gt;
        &amp;lt;appname&amp;gt;XCODE&amp;lt;/appname&amp;gt;
        &amp;lt;equal&amp;gt;com.apple.dt.Xcode&amp;lt;/equal&amp;gt;
      &amp;lt;/appdef&amp;gt;
      &amp;lt;item&amp;gt;
        &amp;lt;name&amp;gt;Control_L to Command_L (XCODE ONLY)&amp;lt;/name&amp;gt;
        &amp;lt;only&amp;gt;XCODE&amp;lt;/only&amp;gt;
        &amp;lt;identifier&amp;gt;remap.app_xcode_contolL2commandL2&amp;lt;/identifier&amp;gt;
        &amp;lt;autogen&amp;gt;--KeyToKey-- KeyCode::CONTROL_L, KeyCode::COMMAND_L&amp;lt;/autogen&amp;gt;
      &amp;lt;/item&amp;gt;
      &amp;lt;item&amp;gt;
        &amp;lt;name&amp;gt;Command_L to Control_L (XCODE ONLY)&amp;lt;/name&amp;gt;
        &amp;lt;only&amp;gt;XCODE&amp;lt;/only&amp;gt;
        &amp;lt;identifier&amp;gt;remap.app_xcode_commandL2controlL2&amp;lt;/identifier&amp;gt;
        &amp;lt;autogen&amp;gt;--KeyToKey-- KeyCode::COMMAND_L, KeyCode::CONTROL_L&amp;lt;/autogen&amp;gt;
      &amp;lt;/item&amp;gt;
    &amp;lt;/item&amp;gt;
  &amp;lt;/list&amp;gt;
&amp;lt;/root&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Reload XML&lt;/code&gt;したら設定が現れるので、両方にチェックをいれて完了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dl.dropboxusercontent.com/u/459142/img/blog/karabiner.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;XVim 入れたらこういうことになるだろうなあ、と思ってたけど案の定 Xcode Way から遠ざかりつつある&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Xcode でカラーパレットを保存して共有したい</title>
      <link>https://blog.hika69.com/blog/2014/12/21/osx-color-palettes/</link>
      <pubDate>Sun, 21 Dec 2014 00:31:08 +0000</pubDate>
      
      <guid>https://blog.hika69.com/blog/2014/12/21/osx-color-palettes/</guid>
      <description>&lt;p&gt;と思ったので調べた。Xcode というより Mac OS X の機能ぽい (OS X Yosemite &amp;amp; Xcode 6.1.1 の場合。他のバージョンで使えるかはわからない)。&lt;/p&gt;

&lt;p&gt;Xcode でカラーパレットを開いて、中央のタブ (Color Palettes) を選択する。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dl.dropboxusercontent.com/u/459142/img/blog/colors.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;左端の歯車のアイコンをクリックして&lt;code&gt;New&lt;/code&gt;を選択するとカラーパレットを作成することができる。&lt;/p&gt;

&lt;p&gt;保存したカラーパレットは&lt;code&gt;~/Library/Colors/&lt;/code&gt;以下に&lt;code&gt;Foo.clr&lt;/code&gt;のようなファイル名で保存されているので、このファイルをプロジェクトメンバー間で共有すると便利そう。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>